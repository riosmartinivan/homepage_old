"use client"

import { useTheme } from "@emotion/react"

export interface Icon {
  className?: string
  size?: string
}

export const Background = ({ className, size = "12rem" }: Icon) => (
  <svg
    className={className}
    width={size}
    height={size}
    viewBox="0 0 260 260"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <rect id="Background" width="260" height="260" rx="20" fill="url(#radial)" />
    <defs>
      <radialGradient
        id="radial"
        cx="0"
        cy="0"
        r="1"
        gradientUnits="userSpaceOnUse"
        gradientTransform="translate(130 130) rotate(90) scale(260 390)"
      >
        <stop stopColor="#D9D9D9" stopOpacity="0" />
        <stop offset="1" stopColor="#212427" stopOpacity="0.40" />
        <stop offset="1" stopColor="#212427" stopOpacity="0.5" />
      </radialGradient>
    </defs>
  </svg>
)

export const Border = ({ className, size }: Icon) => {
  const theme = useTheme()

  return (
    <svg
      className={className}
      width={size ?? "12rem"}
      height={size ?? "12rem"}
      viewBox="0 0 260 260"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        id="Border"
        d="M20.5 7.5H240.346C248.77 7.5 254.782 15.6626 252.284 23.7073L183.961
        243.707C182.337 248.936 177.498 252.5 172.023 252.5H20.5C13.5964
        252.5 8 246.904 8 240V20C8 13.0964 13.5964 7.5 20.5 7.5Z"
        stroke={theme.primary}
        strokeWidth="15"
      />
    </svg>
  )
}

export const Box = ({ className, size }: Icon) => {
  const theme = useTheme()

  return (
    <svg
      className={className}
      width={size ?? "6rem"}
      height={size ?? "6rem"}
      viewBox="0 0 151 158"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g>
        <path
          d="M140 46.7856C140 43.4532 138.159 40.3935 135.214 38.8331L79.2141
          9.15793C76.5783 7.76118 73.4217 7.76117 70.7859 9.15792L14.7859
          38.8331C11.8414 40.3935 10 43.4532 10 46.7856V104.842C10 108.174
          11.8413 111.234 14.7859 112.794L70.7859 142.469C73.4217 143.866
          76.5783 143.866 79.2141 142.469L135.214 112.794C138.159 111.234
          140 108.174 140 104.842V46.7856Z"
          stroke={theme.color.lightGrey}
          strokeWidth="15"
          strokeLinejoin="round"
        />
        <path
          d="M11 42.3872L74 75.3872"
          stroke={theme.color.lightGrey}
          strokeWidth="15"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M75 142.387V75.3872"
          stroke={theme.color.lightGrey}
          strokeWidth="15"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M138 42.3872L75 75.3872"
          stroke={theme.color.lightGrey}
          strokeWidth="15"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M107 24.3872L44 58.3872"
          stroke={theme.color.lightGrey}
          strokeWidth="15"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </g>
    </svg>
  )
}

export const Contract = ({ className, size }: Icon) => {
  const theme = useTheme()

  return (
    <svg
      className={className}
      width={size ?? "6rem"}
      height={size ?? "6rem"}
      viewBox="0 0 151 167"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g>
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M17 12.8232L17 137.823C17 141.138 18.317 144.318 20.6612 146.662C23.0054
          149.006 26.1848 150.323 29.5 150.323H83.6667V135.594C80.4893 133.76 78.006
          130.928 76.602 127.538C75.198 124.149 74.9517 120.391 75.9012 116.847C76.8508
          113.303 78.9432 110.171 81.854 107.938C84.7647 105.704 88.3311 104.494 92
          104.494C95.6689 104.494 99.2353 105.704 102.146 107.938C105.057 110.171 107.149
          113.303 108.099 116.847C109.048 120.391 108.802 124.149 107.398 127.538C105.994
          130.928 103.511 133.76 100.333 135.594V150.323H121.167C124.482 150.323 127.661
          149.006 130.005 146.662C132.35 144.318 133.667 141.138 133.667 137.823V12.8232C133.667
          9.50804 132.35 6.32861 130.005 3.98441C127.661 1.6402 124.482 0.323242 121.167
          0.323242L29.5 0.323242C26.1848 0.323242 23.0054 1.6402 20.6612 3.98441C18.317
          6.32861 17 9.50804 17 12.8232ZM92 129.49C94.2101 129.49 96.3298 128.612 97.8926
          127.049C99.4554 125.486 100.333 123.367 100.333 121.157C100.333 118.946 99.4554
          116.827 97.8926 115.264C96.3298 113.701 94.2101 112.823 92 112.823C89.7899
          112.823 87.6702 113.701 86.1074 115.264C84.5446 116.827 83.6667 118.946 83.6667
          121.157C83.6667 123.367 84.5446 125.486 86.1074 127.049C87.6702 128.612 89.7899
          129.49 92 129.49ZM50.3333 29.4899C50.3333 28.3848 50.7723 27.325 51.5537
          26.5436C52.3351 25.7622 53.3949 25.3232 54.5 25.3232H96.1667C97.2717 25.3232
          98.3315 25.7622 99.1129 26.5436C99.8943 27.325 100.333 28.3848 100.333
          29.4899C100.333 30.595 99.8943 31.6548 99.1129 32.4362C98.3315 33.2176 97.2717
          33.6566 96.1667 33.6566L54.5 33.6566C53.3949 33.6566 52.3351 33.2176 51.5537
          32.4362C50.7723 31.6548 50.3333 30.595 50.3333 29.4899ZM37.8333 50.3232C36.7283
          50.3232 35.6685 50.7622 34.8871 51.5436C34.1057 52.325 33.6667 53.3848 33.6667
          54.4899C33.6667 55.595 34.1057 56.6548 34.8871 57.4362C35.6685 58.2176 36.7283
          58.6566 37.8333 58.6566L112.833 58.6566C113.938 58.6566 114.998 58.2176 115.78
          57.4362C116.561 56.6548 117 55.595 117 54.4899C117 53.3848 116.561 52.325 115.78
          51.5436C114.998 50.7622 113.938 50.3232 112.833 50.3232L37.8333 50.3232ZM33.6667
          71.1566C33.6667 70.0515 34.1057 68.9917 34.8871 68.2103C35.6685 67.4289 36.7283
          66.9899 37.8333 66.9899H112.833C113.938 66.9899 114.998 67.4289 115.78 68.2103C116.561
          68.9917 117 70.0515 117 71.1566C117 72.2616 116.561 73.3214 115.78 74.1029C114.998
          74.8843 113.938 75.3232 112.833 75.3232H37.8333C36.7283 75.3232 35.6685 74.8843
          34.8871 74.1029C34.1057 73.3214 33.6667 72.2616 33.6667 71.1566ZM37.8333
          83.6566C36.7283 83.6566 35.6685 84.0956 34.8871 84.877C34.1057 85.6584 33.6667
          86.7182 33.6667 87.8232C33.6667 88.9283 34.1057 89.9881 34.8871 90.7695C35.6685
          91.5509 36.7283 91.9899 37.8333 91.9899H112.833C113.938 91.9899 114.998 91.5509
          115.78 90.7695C116.561 89.9881 117 88.9283 117 87.8232C117 86.7182 116.561 85.6584
          115.78 84.877C114.998 84.0956 113.938 83.6566 112.833 83.6566H37.8333Z"
          fill={theme.color.lightGrey}
        />
        <path
          d="M83.668 166.99L83.668 150.323L100.335 150.323L100.335 166.99L92.0013 160.74L83.668 166.99Z"
          fill={theme.color.lightGrey}
        />
      </g>
    </svg>
  )
}

export const Gears = ({ className, size }: Icon) => {
  const theme = useTheme()

  return (
    <svg
      className={className}
      width={size ?? "6rem"}
      height={size ?? "6rem"}
      viewBox="0 0 151 151"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g>
        <path
          d="M91.5902 88.6877L102.128 70.4728C102.805 69.3438 102.504 67.9137 101.526
          67.0858L90.3859 58.3547C90.6117 56.6988 90.7622 54.9676 90.7622 53.2364C90.7622
          51.5053 90.6117 49.7741 90.3859 48.0429L101.526 39.3119C102.504 38.4839 102.805
          37.0538 102.128 35.9248L91.5902 17.7099C90.9128 16.5809 89.5579 16.1293 88.3537
          16.5809L75.257 21.8497C72.5474 19.7422 69.6119 18.011 66.3754 16.6562L64.4184
          2.7316C64.2921 2.12285 63.9625 1.57515 63.4838 1.17849C63.0051 0.781822 62.4057
          0.559777 61.784 0.548828L40.709 0.548828C39.4294 0.548828 38.3004 1.52731 38.0746
          2.80687L36.1176 16.7315C32.9564 18.0863 29.9457 19.8174 27.236 21.9249L14.1394
          16.6562C12.9351 16.2046 11.5803 16.6562 10.9029 17.7852L0.36534 36.0001C-0.312073
          37.1291 -0.0109993 38.5592 0.967485 39.3871L12.1071 48.1182C11.8813 49.7741 11.7308
          51.5053 11.7308 53.2364C11.7308 54.9676 11.8813 56.6988 12.1071 58.4299L0.967485
          67.161C-0.0109993 67.989 -0.312073 69.4191 0.36534 70.5481L10.9029 88.7629C11.5803
          89.892 12.9351 90.3436 14.1394 89.892L27.236 84.6232C29.9457 86.7307 32.8811 88.4619
          36.1176 89.8167L38.0746 103.741C38.3004 104.946 39.4294 105.924 40.709
          105.924H61.784C63.0636 105.924 64.1926 104.946 64.4184 103.666L66.3754
          89.7414C69.5366 88.3866 72.5474 86.6554 75.257 84.5479L88.3537 89.8167C89.5579
          90.2683 90.9128 89.8167 91.5902 88.6877ZM51.2465 68.29C42.967 68.29 36.1929
          61.5159 36.1929 53.2364C36.1929 44.957 42.967 38.1828 51.2465 38.1828C59.526
          38.1828 66.3001 44.957 66.3001 53.2364C66.3001 61.5159 59.526 68.29 51.2465
          68.29ZM149.923 126.021L142.697 120.451C142.848 119.397 142.998 118.268 142.998
          117.139C142.998 116.01 142.923 114.881 142.697 113.827L149.848 108.257C150.45
          107.73 150.676 106.827 150.224 106.075L143.45 94.408C143.074 93.6554 142.17
          93.4296 141.342 93.6554L132.988 97.0424C131.256 95.6876 129.375 94.5586 127.267
          93.7306L125.988 84.849C125.958 84.4467 125.78 84.0698 125.488 83.7916C125.195 83.5134
          124.81 83.3537 124.407 83.3436H110.934C110.106 83.3436 109.353 83.9458 109.278
          84.7737L107.999 93.6554C105.966 94.5586 104.009 95.6123 102.278 96.9672L93.9235
          93.5801C93.5399 93.4358 93.1177 93.4323 92.7318 93.5701C92.3459 93.7079 92.0214
          93.9782 91.816 94.3328L85.0419 105.999C84.6655 106.752 84.7408 107.655 85.4182
          108.182L92.5687 113.752C92.2582 115.949 92.2582 118.179 92.5687 120.376L85.4182
          125.945C84.8161 126.472 84.5903 127.375 85.0419 128.128L91.816 139.795C92.1923
          140.547 93.0955 140.773 93.9235 140.547L102.278 137.16C104.009 138.515 105.891
          139.644 107.999 140.472L109.278 149.354C109.429 150.182 110.106 150.784 110.934
          150.784H124.407C125.235 150.784 125.988 150.182 126.063 149.354L127.342
          140.472C129.375 139.569 131.332 138.515 132.988 137.16L141.418 140.547C142.17
          140.848 143.074 140.547 143.525 139.795L150.299 128.128C150.751 127.451 150.525
          126.547 149.923 126.021ZM117.633 127.225C114.937 127.224 112.352 126.152 110.446
          124.245C108.541 122.338 107.471 119.752 107.472 117.056C107.473 114.36 108.545
          111.775 110.452 109.87C112.359 107.964 114.945 106.894 117.64 106.895C120.336 106.896
          122.921 107.968 124.827 109.875C126.733 111.782 127.803 114.368 127.802 117.064C127.801
          119.76 126.729 122.345 124.822 124.25C122.915 126.156 120.329 127.226 117.633 127.225Z"
          fill={theme.color.lightGrey}
        />
      </g>
    </svg>
  )
}

export const Persons = ({ className, size }: Icon) => {
  const theme = useTheme()

  return (
    <svg
      className={className}
      width={size ?? "6rem"}
      height={size ?? "6rem"}
      viewBox="0 0 151 151"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g>
        <path
          d="M75.2688 30.6992C81.0912 30.6992 86.6752 33.0122 90.7922 37.1292C94.9093
          41.2463 97.2222 46.8302 97.2222 52.6526C97.2222 58.475 94.9093 64.059 90.7922
          68.176C86.6752 72.2931 81.0912 74.606 75.2688 74.606C69.4464 74.606 63.8625
          72.2931 59.7454 68.176C55.6284 64.059 53.3154 58.475 53.3154 52.6526C53.3154
          46.8302 55.6284 41.2463 59.7454 37.1292C63.8625 33.0122 69.4464 30.6992 75.2688
          30.6992ZM31.362 46.3802C34.8746 46.3802 38.1362 47.3211 40.9588 49.0146C40.0179
          57.9842 42.6523 66.891 48.0466 73.8533C44.9104 79.8748 38.638 84.0146 31.362
          84.0146C26.3714 84.0146 21.5851 82.0321 18.0562 78.5032C14.5273 74.9743 12.5448
          70.1881 12.5448 65.1974C12.5448 60.2068 14.5273 55.4206 18.0562 51.8916C21.5851
          48.3627 26.3714 46.3802 31.362 46.3802ZM119.176 46.3802C124.166 46.3802 128.952
          48.3627 132.481 51.8916C136.01 55.4206 137.993 60.2068 137.993 65.1974C137.993
          70.1881 136.01 74.9743 132.481 78.5032C128.952 82.0321 124.166 84.0146 119.176
          84.0146C111.9 84.0146 105.627 79.8748 102.491 73.8533C107.96 66.7932 110.498
          57.8976 109.579 49.0146C112.401 47.3211 115.663 46.3802 119.176 46.3802ZM34.4982
          110.672C34.4982 97.6885 52.7509 87.1508 75.2688 87.1508C97.7867 87.1508 116.039
          97.6885 116.039 110.672V121.649H34.4982V110.672ZM0 121.649V112.24C0 103.522
          11.8548 96.1831 27.9122 94.0505C24.2115 98.3157 21.9534 104.212 21.9534
          110.672V121.649H0ZM150.538 121.649H128.584V110.672C128.584 104.212 126.326
          98.3157 122.625 94.0505C138.683 96.1831 150.538 103.522 150.538 112.24V121.649Z"
          fill={theme.color.lightGrey}
        />
      </g>
    </svg>
  )
}
